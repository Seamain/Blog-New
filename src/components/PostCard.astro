---
import { encode } from "node-base64-image";
import formatDate from "../libs/formatDate";
import Icon from "astro-icon";
import type Post from "../interfaces/Post";

interface Props {
  post: Post;
  width: string;
  ml?: string;
}

const { post, ml } = Astro.props;
const avatar = (await encode(
  post.author.data?.attributes.avatar.data?.attributes.formats?.thumbnail?.url,
  { string: true }
)) as string;
const formatedTime = formatDate(new Date(post.createdAt), "yyyy-MM-dd");
---

<div class="border rounded-xl sm:max-w-sm md:max-w-md flex flex-col mt-12">
  <a href=`/posts/${post.slug}`>
    <div class={ml + " flex flex-row items-center mt-5 ml-5 mr-5"}>
      <img
        src={`data:image/png;base64,${avatar}`}
        class="rounded-full border w-7 h-7 mr-2 sm:ml-0 sm:mr-0 sm:h-0 sm:w-0 sm:invisible"
        loading="lazy"
        alt=`这是作者${post.author.data?.attributes.name}的头像`
      />
      <p class="font-semibold line-clamp-2 text-slate-500">
        {post.author.data?.attributes.name}
      </p>
      <Icon class="w-5 h-5 ml-6 mr-3 sm:mr-2 sm:ml-3" name="Clock" />
      <p class="font-semibold line-clamp-2 text-slate-500">{formatedTime}</p>
      <Icon class="w-5 h-5 ml-6 mr-3 sm:ml-3" name="Tag" />
      {
        post.tags
          .slice(0, 2)
          .map((tag) => (
            <p class="mr-2 sm:mr-1 font-semibold text-slate-500">{tag.name}</p>
          ))
      }
    </div>
    <p class={ml + " font-bold text-2xl mt-2 ml-5 sm:ml-3"}>{post.title}</p>
    <p class={ml + " text-lg mt-2 truncate sm:ml-4 ml-5 mb-5"}>
      {post.summary}
    </p>
  </a>
</div>
