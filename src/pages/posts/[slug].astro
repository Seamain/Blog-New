---
import { createFullListOfPostSlugWithId } from "../../api/Post";
import { getPost } from "../../api/Post";
import type Post from "../../interfaces/Post";
import BasicStyle from "../../layouts/BasicStyle.astro";
import { encode } from "node-base64-image";
import formatDate from "../../libs/formatDate";
import Icon from "astro-icon";
import Markdown from "markdown-it";
import Navbar from "../../components/Navbar.astro";

interface SlugWithPost {
  slug: string;
  post: Post;
}

interface Props {
  post: Post;
}

export async function getStaticPaths() {
  const result: SlugWithPost[] = [];
  const fullListOfSlug = await createFullListOfPostSlugWithId();

  for (const postAttr of fullListOfSlug) {
    const post = await getPost(postAttr.id);

    result.push({
      slug: postAttr.slug,
      post,
    });
  }

  return result.map((postAttr) => {
    return {
      params: {
        slug: postAttr.slug,
      },
      props: {
        post: postAttr.post,
      },
    };
  });
}

const { post } = Astro.props;
const avatar = (await encode(
  post.author.data?.attributes.avatar.data?.attributes.formats?.thumbnail?.url,
  { string: true },
)) as string;
const formatedTime = formatDate(new Date(post.createdAt), "yyyy-MM-dd");
let html = Markdown().render(post.content);
const customCss =
  "\n<style>p {padding-bottom: 1rem; font-size: 1.125rem; line-height: 1.75rem; } \nh2{font-size: 1.5rem; line-height: 2rem; font-weight: 700 }</style>";

html = html.concat(customCss);
---

<BasicStyle
  title={post.title}
  description={post.summary}
  ml="flex flex-col items-center"
  ogImage={"/posts/" + post.slug + ".png"}
>
  <div class="flex flex-col items-center">
    <Navbar />
    <div class="flex flex-row items-center mt-5 sm:grid sm:grid-cols-2">
      <div
        class="sm:flex sm:flex-row sm:items-center flex flex-row items-center"
      >
        <img
          src={`data:image/png;base64,${avatar}`}
          class="rounded-full border w-7 h-7 mr-2"
          loading="lazy"
          alt=`这是作者${post.author.data?.attributes.name}的头像`
        />
        <p class="font-semibold sm:line-clamp-2 text-slate-500 mt-4">
          {post.author.data?.attributes.name}
        </p>
      </div>
      <div
        class="sm:flex sm:flex-row sm:items-center flex flex-row items-center"
      >
        <Icon class="w-5 h-5 ml-4 mr-3" name="Clock" />
        <p class="font-semibold sm:line-clamp-2 text-slate-500 mt-4">
          {formatedTime}
        </p>
      </div>
      <div
        class="sm:flex sm:flex-row sm:items-center flex flex-row items-center"
      >
        <Icon class="w-5 h-5 ml-4 mr-3" name="Tag" />
        {
          post.tags.map((tag) => (
            <p class="mr-2 font-semibold text-slate-500 mt-4">{tag.name}</p>
          ))
        }
      </div>
      <div class="sm:flex sm:flex-row flex flex-row items-center">
        <Icon class="w-5 h-5 ml-4 mr-3" name="Category" />
        <a
          href={`/categories/${post.category.data?.attributes.slug}`}
          class="font-semibold text-slate-500 hover:text-cyan-400 underline decoration-dashed underline-offset-4"
          >{post.category.data?.attributes.name}</a
        >
      </div>
    </div>
    <p class="font-bold text-2xl mt-2">{post.title}</p>
    <article class="max-w-4xl mt-2 sm:max-w-xs md:max-w-2xl" set:html={html} />
  </div>
</BasicStyle>
